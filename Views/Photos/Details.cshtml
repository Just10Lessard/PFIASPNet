@model PhotosManager.Models.Photo
@{
    ViewBag.Title = "Détails de photo";

    int userId = ((PhotosManager.Models.User)Session["ConnectedUser"]).Id;


    int currentPhotoId = (int)Session["currentPhotoId"];
    var user = ((PhotosManager.Models.User)Session["ConnectedUser"]);

}

<div class="content">
</div>
<div id="DetailsPanel"> @Html.Action("GetDetails", "Photos")</div>
<hr />
<!-- Create new comment command icon -->
<div class="commentFooter ">
    <h4 style="margin-left:22px;">Commentaires</h4>
    <div class="commentSubFooter" style="font-size:1em">
        <i class="newCommentCmd cmdIcon fa-regular fa-comment" style="margin-top:-3px; z-index:1;font-size:1.5em" parentId="0" title="Ajouter un commentaire"></i>
    </div>
</div>
<details open style="position:relative; top:-40px;" id="commentDetails">
    <summary style="border: none; background: none; "></summary>
    <!-- All comments rendering -->
    <div class="commentsSection" id="commentsSection"> <!-- auto refreshed -->  @Html.Action("Comments", "Photos", new { photoId = currentPhotoId, parentId = 0 })</div>
    <!-- Hidden programmatically new comment UI -->
    <div class="newCommentLayout" photoId="@currentPhotoId" createCommentparentId="0" style="display:none;">
        <div class="UserSmallAvatar" style="background-image:url('@user.Avatar')" title="@user.Name"></div>
<textarea class="form-control" rows="1" placeholder="commenter"></textarea>
        <div></div>
        <div class="editCommentFooter">
            <div></div>
            <!-- Commit create command icon -->
            <span class="createCommentCmd cmdIconSmall fa fa-check" parentId="0"></span>
            <!-- Abort update command icon -->
            <span class="abortCreateCommentCmd cmdIconSmall fa fa-times" parentId="0"></span>
        </div>
    </div>
</details>


@section Scripts {
    <script>

        $(() => {

            detailsPanel = new AutoRefreshedPanel("DetailsPanel", "/Photos/GetDetails", 5, detailsPanelAttachEvents);
            commentsSection = new AutoRefreshedPanel("commentsSection", "/Photos/GetComments", 100000, commentsSectionAttachEvents);
        })
        function commentsSectionAttachEvents() {

            $(".abortEditCommentCmd").off();
            $(".abortEditCommentCmd").click(function (event) {
                event.preventDefault();
                commentsSection.restart();
                let id = $(this).attr("cmdCommentId");
                $("#" + id).hide();
                $("[commentId=" + id + "]").show();
            })
            $(".updateCommentCmd").off();
            $(".updateCommentCmd").click(function (event) {
                event.preventDefault();
                let commentId = $(this).attr("cmdCommentId");
                let commentText = $(this).parent().parent().find("textarea").val();
                commentsSection.postCommand("/Photos/UpdateComment", { commentId, commentText });
                commentsSection.restart();
            })
            $(".deleteCommentCmd").off()
            $(".deleteCommentCmd").click(function (event) {
                event.preventDefault();
                commentsSection.pause();
                let commentId = $(this).attr("cmdCommentId");
                commentsSection.confirmedCommand("Effacer?", `/Photos/DeleteComment?id=${commentId}`); //Donne internal serveur error 500...
                commentsSection.restart();
            })

            $(".createCommentCmd").off();
            $(".createCommentCmd").click(function (event) {
                event.preventDefault();
                let parentId = $(this).attr("parentId");
                let photoId = $(".newCommentLayout").attr("photoId");
                let commentTextArea = $(this).closest(".newCommentLayout").find("textarea");
                let commentText = commentTextArea.val();
                commentsSection.postCommand("/Photos/CreateComment", { photoId, parentId, commentText });
                commentTextArea.val("");
                commentsSection.restart();
            });

            $(".newCommentCmd").off();
            $(".newCommentCmd").click(function (event) {
                event.preventDefault();

                $(".newCommentLayout").show(); //https://www.w3schools.com/jquery/jquery_hide_show.asp

            });
            $(".abortCreateCommentCmd").off();
            $(".abortCreateCommentCmd").click(function (event) {
                event.preventDefault();

                $(".newCommentLayout").hide();

            });

            $(".createResponseCmd").off();
            $(".createResponseCmd").click(function (event) {
                event.preventDefault();

                let parentId = $(this).attr("parentId");
                let photoId = $(".responseLayout").attr("photoId");
                let commentText = $(this).closest(".responseLayout").find("textarea").val();

                commentsSection.postCommand("/Photos/CreateComment", { photoId, parentId, commentText });
                commentsSection.restart();
            });
            $(".CreateResponseCommentCmd").off();
            $(".CreateResponseCommentCmd").click(function (event) {
                event.preventDefault();

                $(".responseLayout").show();

            });
            $(".abortCreateResponseCmd").off();
            $(".abortCreateResponseCmd").click(function (event) {
                event.preventDefault();

                $(".responseLayout").hide();

            });
            $(".editCommentCmd").off();
            $(".editCommentCmd").click(function (event) {
                event.preventDefault();

                $(".editCommentLayout").hide();

                $(".commentLayout").show();

                let commentId = $(this).attr("commentId");

                $('.editCommentLayout#' + commentId).css("display", "grid");
                $('.commentLayout[commentId="' + commentId + '"]').hide();

            });
        }

        function detailsPanelAttachEvents() {
            event.preventDefault();
            detailsPanel.restart();
        }
    </script>
}