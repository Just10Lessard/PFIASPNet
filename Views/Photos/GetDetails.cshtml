
@model PhotosManager.Models.Photo
@{
    ViewBag.Title = "Détails de photo";

    int userId = ((PhotosManager.Models.User)Session["ConnectedUser"]).Id;

    bool userLike = PhotosManager.Models.DB.Likes.ToList().Exists(l => (l.PhotoId == Model.Id && l.UserId == userId));

    bool userComment = PhotosManager.Models.DB.Comments.ToList().Exists(l => (l.PhotoId == Model.Id && l.OwnerId == userId));

    string photoCommentedUser = userComment ? "fa" : "fa-regular";

    string photoLikedByConnectedUser = userLike ? "fa" : "fa-regular";

}

<div class="photoDetailsOwner">
    <div class="UserSmallAvatar" style="background-image:url('@Model.Owner.Avatar')" title="@Model.Owner.Name"></div>
    @Model.Owner.Name
</div>
<hr>
<div class="photoDetailsTitle">@Model.Title</div>
<img src="@Model.Image" class="photoDetailsLargeImage">
<div class="photoDetailsCreationDate">
    @Helper.When(Model.CreationDate, true)
    <div class="likesSummary">
        @Model.Comments.Count()
        <i class="cmdIconSmall @photoCommentedUser fa-comment" title="@Model.CommentsUserList"></i>
        @Model.Likes.Count()
        <a href="/Photos/TogglePhotoLike/@Model.Id"
           style="text-decoration:none; font-size:1.1em"
           class="cmdIconSmall @photoLikedByConnectedUser fa-thumbs-up"
           id="addRemoveLikeCmd"
           title="@Html.Raw(Model.UsersLikesList)">
        </a>
    </div>
    <div class="photoDetailsDescription">@Model.Description</div>
</div>

